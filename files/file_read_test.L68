00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 11/01/2023 13:50:47

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00001000                             8  START   ORG     $1000
00001000                             9  
00001000  303C 0008                 10      MOVE.W  #8,D0
00001004  4E4F                      11      TRAP    #15
00001006  23C1 00001132             12      MOVE.L  D1,last_frame_time
0000100C                            13  
0000100C                            14      ; loads in a song binary file
0000100C  103C 0033                 15      MOVE.B  #51,D0
00001010  43F9 000012E8             16      LEA     FILENAME,A1
00001016  4E4F                      17      TRAP    #15
00001018                            18  
00001018  103C 0035                 19      MOVE.B  #53,D0
0000101C  43F9 000012FD             20      LEA     FILE_CONTENTS,A1
00001022  243C 00000200             21      MOVE.L  #512,D2
00001028  4E4F                      22      TRAP    #15
0000102A                            23      
0000102A  103C 0032                 24      MOVE.B  #50,D0
0000102E  4E4F                      25      TRAP    #15
00001030                            26      
00001030                            27      ; loads in a sound
00001030                            28      ;MOVE.L  #'note',$100
00001030                            29      ;MOVE.L  #'s/a1',$104
00001030                            30      ;MOVE.L  #'0.wa',$108
00001030                            31      ;MOVE.B  #'v',$10C
00001030                            32      ;MOVE.B  #0,$10D
00001030                            33      
00001030                            34      ;MOVE.B  #74,D0
00001030                            35      ;MOVE.W  #$100,A1
00001030                            36      ;MOVE.B  #0,D1
00001030                            37      ;TRAP    #15
00001030                            38      
00001030                            39      ; plays loaded sound
00001030                            40      ;MOVE.B  #75,D0
00001030                            41      ;TRAP    #15
00001030                            42      
00001030  6100 000A                 43      BSR     LOAD_IN_ALL_NOTES
00001034  6100 0028                 44      BSR     PLAY_IN_MUSIC
00001038  FFFF FFFF                 45      SIMHALT
0000103C                            46  
0000103C                            47  LOAD_IN_ALL_NOTES
0000103C  43F9 00001136             48      LEA     A10,A1
00001042                            49      FOR D1 = #0 TO #30  DO
0000104A  103C 004A                 50          MOVE.B  #74,D0
0000104E  4E4F                      51          TRAP    #15
00001050  D2FC 000E                 52          ADD.W   #14,A1
00001054                            53      ENDF
0000105C                            54  
0000105C  4E75                      55      RTS
0000105E                            56  
0000105E                            57  
0000105E                            58  PLAY_IN_MUSIC
0000105E  41F9 000012FD             59      LEA     FILE_CONTENTS,A0
00001064  7600                      60      MOVE.L  #0,D3
00001066                            61      FOR D5 = #0 TO #63  DO
0000106E                            62          FOR D6 = #0 TO #7   DO
00001076  5248                      63              ADD.W   #1,A0
00001078  1610                      64              MOVE.B  (A0),D3
0000107A  7400                      65              MOVE.L  #0,D2
0000107C                            66              IF.L #0 <NE> D3 THEN
00001086                            67                  ; splits the four bits of d2 byte into d1
00001086  0803 0007                 68                  BTST.L  #7,D3
0000108A                            69                  IF  <NE>    THEN
0000108E  5002                      70                      ADD.B   #8,D2
00001090  0403 0080                 71                      SUB.B   #128,D3
00001094                            72                  ENDI
00001094  0803 0006                 73                  BTST.L  #6,D3
00001098                            74                  IF  <NE>    THEN
0000109C  5802                      75                      ADD.B   #4,D2
0000109E  0403 0040                 76                      SUB.B   #64,D3
000010A2                            77                  ENDI
000010A2  0803 0005                 78                  BTST.L  #5,D3
000010A6                            79                  IF  <NE>    THEN
000010AA  5402                      80                      ADD.B   #2,D2
000010AC  0403 0020                 81                      SUB.B   #32,D3
000010B0                            82                  ENDI
000010B0  0803 0004                 83                  BTST.L  #4,D3
000010B4                            84                  IF  <NE>    THEN
000010B8  5202                      85                      ADD.B   #1,D2
000010BA  0403 0010                 86                      SUB.B   #16,D3
000010BE                            87                  ENDI
000010BE                            88                  ; checks if note is played
000010BE                            89                  IF #0 <NE> D2   THEN
000010C6  1206                      90                      MOVE.B  D6,D1
000010C8  0802 0003                 91                      BTST.L  #3,D2
000010CC                            92                      IF  <NE>    THEN
000010D0  0601 0010                 93                          ADD.B   #16,D1
000010D4                            94                      ENDI
000010D4  103C 004B                 95                      MOVE.B  #75,D0
000010D8  4E4F                      96                      TRAP    #15
000010DA                            97                  ENDI
000010DA                            98                  IF #0 <NE> D3   THEN
000010E2  1206                      99                      MOVE.B  D6,D1
000010E4  0803 0003                100                      BTST.L  #3,D3
000010E8                           101                      IF  <NE>    THEN
000010EC  0601 0010                102                          ADD.B   #16,D1
000010F0                           103                      ENDI
000010F0  103C 004B                104                      MOVE.B  #75,D0
000010F4  4E4F                     105                      TRAP    #15
000010F6                           106                  ENDI
000010F6                           107              ENDI
000010F6  6100 0018                108              BSR FRAME_DELAY
000010FA                           109          ENDF
00001104                           110      ENDF
0000110E                           111  
0000110E  4E75                     112      RTS
00001110                           113  
00001110                           114  
00001110                           115  FRAME_DELAY
00001110  303C 0008                116          MOVE.W  #8,D0       ; gets the time
00001114  4E4F                     117          TRAP    #15
00001116                           118  
00001116  92B9 00001132            119          SUB.L   last_frame_time,D1  ; subtracts the two times
0000111C  B2BC 00000001            120          CMP.L   #1,D1               ; n number of centiseconds have passed
00001122  65EC                     121          BLO     frame_delay
00001124                           122  
00001124  303C 0008                123          MOVE.W  #8,D0               ; save time
00001128  4E4F                     124          TRAP    #15
0000112A  23C1 00001132            125          MOVE.L  D1,last_frame_time
00001130                           126  
00001130  4E75                     127          RTS
00001132                           128  
00001132                           129  last_frame_time         DS.L    1   ; stores the time at last frame
00001136                           130  
00001136                           131  ; notes names
00001136= 6E 6F 74 65 73 2F ...    132  A10 DC.B    'notes/a10.wav',0
00001144= 6E 6F 74 65 73 2F ...    133  B10 DC.B    'notes/b10.wav',0
00001152= 6E 6F 74 65 73 2F ...    134  C10 DC.B    'notes/c10.wav',0
00001160= 6E 6F 74 65 73 2F ...    135  D10 DC.B    'notes/d10.wav',0
0000116E= 6E 6F 74 65 73 2F ...    136  E10 DC.B    'notes/e10.wav',0
0000117C= 6E 6F 74 65 73 2F ...    137  F10 DC.B    'notes/f10.wav',0
0000118A= 6E 6F 74 65 73 2F ...    138  G10 DC.B    'notes/g10.wav',0
00001198                           139  
00001198= 6E 6F 74 65 73 2F ...    140  A20 DC.B    'notes/a20.wav',0
000011A6= 6E 6F 74 65 73 2F ...    141  B20 DC.B    'notes/b20.wav',0
000011B4= 6E 6F 74 65 73 2F ...    142  C20 DC.B    'notes/c20.wav',0
000011C2= 6E 6F 74 65 73 2F ...    143  D20 DC.B    'notes/d20.wav',0
000011D0= 6E 6F 74 65 73 2F ...    144  E20 DC.B    'notes/e20.wav',0
000011DE= 6E 6F 74 65 73 2F ...    145  F20 DC.B    'notes/f20.wav',0
000011EC= 6E 6F 74 65 73 2F ...    146  G20 DC.B    'notes/g20.wav',0
000011FA                           147  
000011FA= 6E 6F 74 65 73 2F ...    148  A30 DC.B    'notes/a30.wav',0
00001208= 6E 6F 74 65 73 2F ...    149  B30 DC.B    'notes/b30.wav',0
00001216                           150  
00001216= 6E 6F 74 65 73 2F ...    151  A11 DC.B    'notes/a11.wav',0
00001224= 6E 6F 74 65 73 2F ...    152  B11 DC.B    'notes/b11.wav',0
00001232= 6E 6F 74 65 73 2F ...    153  C11 DC.B    'notes/c11.wav',0
00001240= 6E 6F 74 65 73 2F ...    154  D11 DC.B    'notes/d11.wav',0
0000124E= 6E 6F 74 65 73 2F ...    155  E11 DC.B    'notes/e11.wav',0
0000125C= 6E 6F 74 65 73 2F ...    156  F11 DC.B    'notes/f11.wav',0
0000126A= 6E 6F 74 65 73 2F ...    157  G11 DC.B    'notes/g11.wav',0
00001278                           158  
00001278= 6E 6F 74 65 73 2F ...    159  A21 DC.B    'notes/a21.wav',0
00001286= 6E 6F 74 65 73 2F ...    160  B21 DC.B    'notes/b21.wav',0
00001294= 6E 6F 74 65 73 2F ...    161  C21 DC.B    'notes/c21.wav',0
000012A2= 6E 6F 74 65 73 2F ...    162  D21 DC.B    'notes/d21.wav',0
000012B0= 6E 6F 74 65 73 2F ...    163  E21 DC.B    'notes/e21.wav',0
000012BE= 6E 6F 74 65 73 2F ...    164  F21 DC.B    'notes/f21.wav',0
000012CC= 6E 6F 74 65 73 2F ...    165  G21 DC.B    'notes/g21.wav',0
000012DA                           166  
000012DA= 6E 6F 74 65 73 2F ...    167  A31 DC.B    'notes/a31.wav',0
000012E8                           168  
000012E8                           169  
000012E8= 73 6F 6E 67 73 2F ...    170  FILENAME    DC.B    'songs/number_one.sun',0
000012FD                           171  FILE_CONTENTS   DS.B    512
000014FD                           172  
000014FD                           173      END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A10                 1136
A11                 1216
A20                 1198
A21                 1278
A30                 11FA
A31                 12DA
B10                 1144
B11                 1224
B20                 11A6
B21                 1286
B30                 1208
C10                 1152
C11                 1232
C20                 11B4
C21                 1294
D10                 1160
D11                 1240
D20                 11C2
D21                 12A2
E10                 116E
E11                 124E
E20                 11D0
E21                 12B0
F10                 117C
F11                 125C
F20                 11DE
F21                 12BE
FILENAME            12E8
FILE_CONTENTS       12FD
FRAME_DELAY         1110
G10                 118A
G11                 126A
G20                 11EC
G21                 12CC
LAST_FRAME_TIME     1132
LOAD_IN_ALL_NOTES   103C
PLAY_IN_MUSIC       105E
START               1000
_00000000           10F6
_00000001           1094
_00000002           10A2
_00000003           10B0
_00000004           10BE
_00000005           10DA
_00000006           10D4
_00000007           10F6
_00000008           10F0
_20000000           104A
_20000001           1056
_20000002           106E
_20000003           1106
_20000004           1076
_20000005           10FC
